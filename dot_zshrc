# Fig pre block. Keep at the top of this file.
export OS="$(uname -s)"
if [[ $TERM_PROGRAM != "WarpTerminal" ]]; then
  if [ "$OS" = "Darwin" ]; then
  [[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
  fi

  typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi
fi

if [ "$OS" = "Darwin" ]; then
  source $HOME/.zsh/macos.zsh
else
  export PATH="$HOME/bin:$PATH"
  source "/usr/share/doc/fzf/examples/key-bindings.zsh"
  source "/usr/share/doc/fzf/examples/completion.zsh"
fi

source $HOME/.zsh/zim-init.zsh

if (( $+commands[luarocks] )) then
  export PATH="$HOME/.luarocks/bin:$PATH"
fi

export PATH="$HOME/.bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
if (( $+commands[go] )) then
  path=($HOME/go/bin $path)
fi

eval "$(atuin init zsh)" >> ~/.zshrc

# bun completions
[ -s "/Users/jamesbombeelu/.bun/_bun" ] && source "/Users/jamesbombeelu/.bun/_bun"

# bun
export BUN_INSTALL="/Users/jamesbombeelu/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
# pnpm
export PNPM_HOME="/Users/jamesbombeelu/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"

zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

export HISTORY_IGNORE="(fg|ls|exit)"

if (( $+commands[nvim] ))
then
  if [ -n "$NVIM" ]; then
    alias nvim=nvr -cc split --remote-wait +'set bufhidden=wipe'
    # alias nvim="nvim --server $NVIM --remote"
  fi

  if [ -n "$NVIM" ]; then
    export VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
    export EDITOR="nvr -cc split --remote-wait +'set bufhidden=wipe'"
  else
    export VISUAL="nvim"
    export EDITOR="nvim"
  fi
  export NEOVIDE_MULTIGRID=false
else
  export VISUAL="vim"
  export EDITOR="vim"
fi
if (( $+commands[delta] ))
then
  alias diff="delta"
fi

if [[ $TERM = "xterm-kitty" ]]
then
  source $HOME/.zsh/kitty.zsh
fi

if (( $+commands[exa] ))
then
  alias ll='exa -l --git'
  alias ls="exa --sort type --ignore-glob='.DS_Store'"
fi

if (( $+commands[zoxide] ))
then
  eval "$(zoxide init zsh)"
fi

if (( $+commands[chezmoi] ))
then
  function dot() {
    cd "$HOME/.local/share/chezmoi/"
  }
  alias config="dot"
fi

export RTX_SHELL=zsh

rtx() {
  local command
  command="${1:-}"
  if [ "$#" = 0 ]; then
    command rtx
    return
  fi
  shift

  case "$command" in
  deactivate|shell)
    eval "$(command rtx "$command" "$@")"
    ;;
  *)
    command rtx "$command" "$@"
    ;;
  esac
}

_rtx_hook() {
  trap -- '' SIGINT;
  eval "$(rtx hook-env -s zsh)";
  trap - SIGINT;
}
typeset -ag precmd_functions;
if [[ -z "${precmd_functions[(r)_rtx_hook]+1}" ]]; then
  precmd_functions=( _rtx_hook ${precmd_functions[@]} )
fi
typeset -ag chpwd_functions;
if [[ -z "${chpwd_functions[(r)_rtx_hook]+1}" ]]; then
  chpwd_functions=( _rtx_hook ${chpwd_functions[@]} )
fi

export FZF_CTRL_T_COMMAND="fd --strip-cwd-prefix --follow -c always --hidden --exclude .git --exclude .DS_Store --exclude .keep"
export FZF_CTRL_T_OPTS="--color 'fg:#f9f9ff,fg+:#f3f99d,hl:#5af78e,hl+:#5af78e,spinner:#5af78e,pointer:#ff6ac1,info:#5af78e,prompt:#9aedfe,gutter:#282a36' --border"

if [[ $TERM_PROGRAM != "WarpTerminal" ]]; then
  (( ! ${+functions[p10k-instant-prompt-finalize]} )) || p10k-instant-prompt-finalize
  [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Fig post block. Keep at the bottom of this file.
if [ "$OS" = "Darwin" ]; then
# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
fi
else
  eval "$(starship init zsh)"
fi

