# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# Feel free to omit keys that you don't use in your config.
# If the key is absent in your config the default value is taken from this config

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands.html
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands.html
after-startup-command = [
  # JankyBorders has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  # 'exec-and-forget /opt/homebrew/bin/sketchybar',
  # 'exec-and-forget /opt/homebrew/bin/borders active_color=0xff5af78e inactive_color=0xff494d64 width=5.0 hidpi=on',
]

exec-on-workspace-change = [
  '/bin/zsh',
  '-c',
  'open -g "raycast://extensions/jamesbombeelu/aerospace/focused-workspace?launchType=background&arguments=%7B%22workspace%22%3A%20%22$AEROSPACE_FOCUSED_WORKSPACE%22%7D"',
]

on-focus-changed = [
  'exec-and-forget open -g raycast://extensions/jamesbombeelu/aerospace/focused-window?launchType=background',
]
on-focused-monitor-changed = []

# Start AeroSpace at login
start-at-login = true

automatically-unhide-macos-hidden-apps = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide.html#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide.html#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 50

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

gaps.inner.horizontal = 20
gaps.inner.vertical = 20
gaps.outer.left = 20
gaps.outer.bottom = 20
gaps.outer.top = 20
# NOTE: For sketchybar:
# gaps.outer.top = [{ monitor."built-in" = 20 }, 50]
gaps.outer.right = 20

# Layout of root containers of non-empty workspaces. The layout is applied only on startup
# Possible values: smart|tiles|accordion
# - 'tiles' and 'accordion' are self-describing
# - 'smart' means some "smart logic". Currently, 3 and less windows will get 'tiles' layout,
#   4 and more will get 'accordion' layout. 'smart' can change its behavior in future versions
non-empty-workspaces-root-containers-layout-on-startup = 'smart'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes
# 'main' binding mode must be always presented

[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands.html

# Disable "Hide application" MacOS shortcut
cmd-h = []
# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands.html#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'
# alt-enter = 'exec-and-forget open -n /Applications/WezTerm.app'


# See: https://nikitabobko.github.io/AeroSpace/commands.html#layout
# alt-slash = 'layout tiles horizontal vertical'
# alt-slash = 'layout tiles horizontal'
# alt-comma = 'layout accordion horizontal vertical'
# alt-comma = 'layout accordion horizontal'
alt-shift-comma = 'layout h_accordion h_tiles'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#focus
alt-h = 'focus left --boundaries-action wrap-around-the-workspace'
alt-j = 'focus down'
alt-k = 'focus up'
# alt-l = 'focus right --boundaries all-monitors-outer-frame'
alt-l = 'focus right --boundaries-action wrap-around-the-workspace'

ctrl-alt-shift-comma = 'workspace prev --wrap-around'
ctrl-alt-shift-period = 'workspace next --wrap-around'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#workspace
# See: https://nikitabobko.github.io/AeroSpace/commands.html#move-node-to-workspace

# Workspace (M)ain
alt-1 = 'workspace M'
alt-m = 'workspace M'
alt-shift-1 = 'move-node-to-workspace M'
alt-shift-m = 'move-node-to-workspace M'

# Workspace (N)otes
alt-2 = 'workspace N'
alt-n = 'workspace N'
alt-shift-2 = 'move-node-to-workspace N'
alt-shift-n = 'move-node-to-workspace N'

alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'

# Workspace (S)lack?
alt-s = 'workspace S'
alt-shift-s = 'move-node-to-workspace S'

alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'

ctrl-alt-h = 'join-with left'
ctrl-alt-j = 'join-with down'
ctrl-alt-k = 'join-with up'
ctrl-alt-l = 'join-with right'

# # See: https://nikitabobko.github.io/AeroSpace/commands.html#workspace-back-and-forth
# alt-tab = 'focus right --boundaries-action wrap-around-the-workspace'
# # See: https://nikitabobko.github.io/AeroSpace/commands.html#move-workspace-to-monitor
# alt-shift-tab = 'focus left --boundaries-action wrap-around-the-workspace'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#mode
alt-shift-semicolon = 'mode service'
alt-shift-slash = 'mode join'

alt-shift-c = 'reload-config'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes
[mode.service.binding]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
esc = ['reload-config', 'mode main']

# 'join' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes
[mode.join.binding]
alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']
esc = 'mode main'

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'pl.maketheweb.cleanshotx'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.chromium.Chromium'
run = 'layout floating'

# Main workspace
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace M'
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace M'
[[on-window-detected]]
if.app-id = 'com.culturedcode.ThingsMac'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace M'

# Slack
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace S'

# Notes
[[on-window-detected]]
if.app-id = 'notion.id'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace N'
[[on-window-detected]]
if.app-id = 'com.lukilabs.lukiapp'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace N'
[[on-window-detected]]
if.app-id = 'md.obsidian'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace N'

# Chat
[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace 3'
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace 3'
[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop-beta'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace 3'

# Email
[[on-window-detected]]
if.app-id = 'com.apple.mail'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace 4'
[[on-window-detected]]
if.app-id = 'com.mimestream.Mimestream'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace 4'

# Other?

[[on-window-detected]]
if.app-id = 'tv.parsec.www'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = 'com.moonlight-stream.Moonlight'
# if.during-aerospace-startup = true
run = 'move-node-to-workspace 5'


[workspace-to-monitor-force-assignment]
M = 'main'     # Main monitor
N = 'main'     # Main monitor
3 = 'main'     # Main monitor
4 = 'main'     # Case insensitive regex substring
5 = 'main'     # Case insensitive regex substring
6 = 'main'     # Case insensitive regex substring
S = 'built-in'
